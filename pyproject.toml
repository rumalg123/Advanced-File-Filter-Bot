[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "auto-file-filter-bot"
version = "2.0.0"
description = "Advanced Telegram Auto File Filter Bot with Premium Batch Links"
authors = [{name = "AutoFileFilterBot Team"}]
license = {text = "MIT"}
requires-python = ">=3.9"
dependencies = [
    "pyrofork",
    "tgcrypto", 
    "pymongo",
    "motor",
    "redis",
    "aiohttp",
    "python-dotenv",
    "backoff",
    "uvloop",
    "psutil",
    "msgpack",
    "pillow",
    "python-dateutil",
    "pytz",
    "marshmallow",
    "umongo",
    "requests",
    "aiohttp-cors",
    "sqlalchemy"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "black>=23.0.0"
]

[tool.ruff]
target-version = "py39"
line-length = 100
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "RUF", # Ruff-specific rules
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "RUF012", # Mutable class attributes should be annotated
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "pyrogram.*",
    "motor.*",
    "pymongo.*",
    "redis.*",
    "msgpack.*",
    "umongo.*",
    "marshmallow.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --disable-warnings"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "venv/*",
    ".venv/*",
    "__pycache__/*",
    "*.pyc",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]